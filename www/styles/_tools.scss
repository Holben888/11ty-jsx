@use "settings";

@function breakpoint($_breakpointName) {
  @if map-has-key($map: settings.$breakpoints, $key: $_breakpointName) {
    @return map-get($map: settings.$breakpoints, $key: $_breakpointName);
  } @else {
    @error "[fn] breakpoint: The breakpoint '#{$_breakpointName}' does not exist in $breakpoints!";
  }
}

@mixin gradient-link {
  color: var(--color-accent-4);
  padding: 2px;
  transition-property: background-position-x, color, opacity;
  transition-duration: var(--animation-base-duration);
  transition-timing-function: var(--animation-base-easing);
  border-radius: 2px;
  background:
    linear-gradient(
      80deg,
      var(--bg, var(--color-primary-8)) 33%,
      var(--gradient-slinkity)
    );
  background-size: 300% 100%;
  background-position-x: 0;

  &:where(:hover, :focus) {
    background-position-x: 100%;
    color: var(--color-dark);
    text-decoration: none;
  }
}

@mixin gradient-links {
  a,
  a:visited {
    @include gradient-link;
  }
}

@mixin gradient-grid {
  background: var(--color-primary-9);
  background-image:
    linear-gradient(var(--color-primary-7) 1px, transparent 0),
    linear-gradient(90deg, var(--color-primary-7) 1px, transparent 0);
  background-size: var(--grid-size, 2rem) var(--grid-size, 2rem);

  &::before {
    content: "";
    position: fixed;
    inset: 0;
    z-index: -1;
    background: linear-gradient(transparent 25%, var(--color-primary-9) 50%);
    background-size: 100% 200%;
    animation: fade-in-grid 0.8s linear forwards;
    @keyframes fade-in-grid {
      from {
        background-position-y: 100%;
      }

      to {
        background-position-y: 0%;
      }
    }
  }
}

@mixin content-card {
  max-width: var(--content-max-width);
  margin: auto;
  padding: var(--default-padding);
  border-radius: var(--rounded-corners);
  box-shadow: var(--shadow-heavy);
  background-color: var(--color-primary-8);
  @include gradient-links;

  > .heading-wrapper:first-child {
    > * {
      margin-block-start: 0;
    }
  }
}

@mixin underline-link-in-forced-colors {
  @media (forced-colors: active) {
    text-decoration: underline;

    &:where(:hover, :focus) {
      text-decoration: none;
    }
  }
}
